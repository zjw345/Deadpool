name: Go CI Build and Test

on:
  push:
    branches:
      - main            # 在 main 分支上进行推送时触发
      - zjw345-patch-1-API-socks5 # 可以替换为你想要触发构建的其他分支
  pull_request:
    branches:
      - main            # 在对 main 分支发起 PR 时触发
      - zjw345-patch-1-API-socks5 # 对其他分支发起 PR 时也可以触发构建

jobs:
  build:
    runs-on: ubuntu-latest  # 使用 Ubuntu 作为基础运行环境

    strategy:
      matrix:
        os: [linux, windows]  # 目标操作系统
        arch: [amd64, arm64]  # 目标架构

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # 获取代码

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.23'  # 设置 Go 版本

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run tests
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go test ./...  # 运行 Go 测试

    - name: Build Go binaries
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o myapp-${{ matrix.os }}-${{ matrix.arch }} .  # 构建 Go 应用

    - name: Archive binaries
      run: |
        tar -czf myapp-${{ matrix.os }}-${{ matrix.arch }}.tar.gz myapp-${{ matrix.os }}-${{ matrix.arch }}
        mv myapp-${{ matrix.os }}-${{ matrix.arch }}.tar.gz ./release-artifacts/  # 打包二进制文件

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: myapp-binaries
        path: ./release-artifacts/myapp-*.tar.gz  # 上传构建好的二进制文件
